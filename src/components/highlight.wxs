var format = function formats(text) {
    if (typeof text !== 'string') {
        return (text)
    };
    var richText = text.split('\x3cem\x3e').join("\x3cspan style\x3d\x27color: #2E68F8;\x27\x3e");
    richText = richText.split('\x3c/em\x3e').join("\x3c/span\x3e");
    richText = '\x3cdiv style\x3d\x22overflow: hidden; text-overflow: ellipsis; white-space:nowrap;\x22\x3e' + richText + "\x3c/div\x3e";
    return (richText)
};

function getFormatedText(text) {
    if (typeof text !== 'string') {
        return ("not_text")
    };
    var richText = text.split('\x3cem\x3e').join("\x3cspan style\x3d\x27color: #2E68F8;\x27\x3e");
    richText = richText.split('\x3c/em\x3e').join("\x3c/span\x3e");
    return (richText)
};

function wrapFormatedText(text) {
    if (typeof text !== 'string') {
        text = 'not_text'
    };
    if (!~text.indexOf('\x3cem\x3e')) {
        text = '\x3cem\x3e' + text + '\x3c/em\x3e'
    };
    return (getFormatedText(text))
};

function getFormatedFname(fname, ftype) {
    if (typeof fname !== 'string') {
        return (fname)
    };
    var richText = fname;
    if (ftype === 'file' || ftype === 'sharefile') {
        var nameArr = richText.split('.');
        var length = nameArr.length;
        if (length > 1) {
            var ext = '.' + nameArr[((nt_0 = (length - 1), null == nt_0 ? undefined : 'number' === typeof nt_0 ? nt_0 : "" + nt_0))];
            richText = fname.substring(0, fname.length - ext.length)
        } else {
            richText = fname
        }
    };
    return (getFormatedText(richText))
};
module.exports = ({
    getFormatedText: getFormatedText,
    getFormatedFname: getFormatedFname,
    wrapFormatedText: wrapFormatedText,
});